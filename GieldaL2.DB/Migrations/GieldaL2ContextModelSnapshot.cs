// <auto-generated />
using System;
using GieldaL2.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GieldaL2.DB.Migrations
{
    [DbContext(typeof(GieldaL2Context))]
    partial class GieldaL2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GieldaL2.DB.Entities.BuyOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int?>("BuyerId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Price");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("StockId");

                    b.ToTable("BuyOffers");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.SellOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Price");

                    b.Property<int?>("ShareId");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ShareId");

                    b.HasIndex("UserId");

                    b.ToTable("SellOffers");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int?>("OwnerId");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("StockId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation");

                    b.Property<decimal>("CurrentPrice");

                    b.Property<string>("Name");

                    b.Property<decimal>("PriceDelta");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int?>("BuyerId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Price");

                    b.Property<int?>("SellerId");

                    b.Property<int?>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.HasIndex("StockId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMail");

                    b.Property<decimal>("Money");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.BuyOffer", b =>
                {
                    b.HasOne("GieldaL2.DB.Entities.User", "Buyer")
                        .WithMany("BuyOffers")
                        .HasForeignKey("BuyerId");

                    b.HasOne("GieldaL2.DB.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.SellOffer", b =>
                {
                    b.HasOne("GieldaL2.DB.Entities.Share", "Share")
                        .WithMany()
                        .HasForeignKey("ShareId");

                    b.HasOne("GieldaL2.DB.Entities.User")
                        .WithMany("SellOffers")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.Share", b =>
                {
                    b.HasOne("GieldaL2.DB.Entities.User", "Owner")
                        .WithMany("Shares")
                        .HasForeignKey("OwnerId");

                    b.HasOne("GieldaL2.DB.Entities.Stock", "Stock")
                        .WithMany("Shares")
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("GieldaL2.DB.Entities.Transaction", b =>
                {
                    b.HasOne("GieldaL2.DB.Entities.User", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerId");

                    b.HasOne("GieldaL2.DB.Entities.User", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId");

                    b.HasOne("GieldaL2.DB.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });
#pragma warning restore 612, 618
        }
    }
}
